<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fightcoder.mapper.CoderMapper" >
  <resultMap id="BaseResultMap" type="com.fightcoder.pojo.Coder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="fame" property="fame" jdbcType="INTEGER" />
    <result column="instFactionId" property="instfactionid" jdbcType="INTEGER" />
    <result column="school" property="school" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fightcoder.pojo.CoderWithBLOBs" extends="BaseResultMap" >
    <result column="following" property="following" jdbcType="LONGVARCHAR" />
    <result column="followers" property="followers" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, picture, nickname, email, age, sex, fame, instFactionId, school
  </sql>
  <sql id="Blob_Column_List" >
    following, followers
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from inst_coder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from inst_coder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fightcoder.pojo.CoderWithBLOBs" >
    insert into inst_coder (id, picture, nickname, 
      email, age, sex, fame, 
      instFactionId, school, following, 
      followers)
    values (#{id,jdbcType=INTEGER}, #{picture,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{fame,jdbcType=INTEGER}, 
      #{instfactionid,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{following,jdbcType=LONGVARCHAR}, 
      #{followers,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fightcoder.pojo.CoderWithBLOBs" >
    insert into inst_coder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="fame != null" >
        fame,
      </if>
      <if test="instfactionid != null" >
        instFactionId,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="following != null" >
        following,
      </if>
      <if test="followers != null" >
        followers,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="fame != null" >
        #{fame,jdbcType=INTEGER},
      </if>
      <if test="instfactionid != null" >
        #{instfactionid,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="following != null" >
        #{following,jdbcType=LONGVARCHAR},
      </if>
      <if test="followers != null" >
        #{followers,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fightcoder.pojo.CoderWithBLOBs" >
    update inst_coder
    <set >
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="fame != null" >
        fame = #{fame,jdbcType=INTEGER},
      </if>
      <if test="instfactionid != null" >
        instFactionId = #{instfactionid,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="following != null" >
        following = #{following,jdbcType=LONGVARCHAR},
      </if>
      <if test="followers != null" >
        followers = #{followers,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fightcoder.pojo.CoderWithBLOBs" >
    update inst_coder
    set picture = #{picture,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      fame = #{fame,jdbcType=INTEGER},
      instFactionId = #{instfactionid,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      following = #{following,jdbcType=LONGVARCHAR},
      followers = #{followers,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fightcoder.pojo.Coder" >
    update inst_coder
    set picture = #{picture,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      fame = #{fame,jdbcType=INTEGER},
      instFactionId = #{instfactionid,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>